#
# Default JavaScript messages file.
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Rhino code, released
# May 6, 1999.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1997-1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Norris Boyd
#   Bob Jervis
#   Pascal-Louis Perez
#
# Alternatively, the contents of this file may be used under the terms of
# the GNU General Public License Version 2 or later (the "GPL"), in which
# case the provisions of the GPL are applicable instead of those above. If
# you wish to allow use of your version of this file only under the terms of
# the GPL and not to allow others to use your version of this file under the
# MPL, indicate your decision by deleting the provisions above and replacing
# them with the notice and other provisions required by the GPL. If you do
# not delete the provisions above, a recipient may use your version of this
# file under either the MPL or the GPL.
#
# ***** END LICENSE BLOCK *****

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

# Codegen
msg.unexpected.eof =\
    Unexpected end of file

msg.end.annotation.expected =\
    expected end of line or comment.

msg.bad.jsdoc.tag =\
    illegal use of unknown JSDoc tag "{0}"; ignoring it. Place another character before the @ to stop JSCompiler from parsing it as an annotation.

msg.bad.fileoverview.visibility.annotation =\
    {0} visibility not allowed in @fileoverview block

msg.missing.variable.name =\
    expecting a variable name in a @param tag.

msg.dup.variable.name =\
    duplicate variable name "{0}"

msg.invalid.variable.name =\
    invalid param name "{0}"

msg.jsdoc.incompat.type =\
    type annotation incompatible with other annotations.

msg.jsdoc.type.syntax =\
    type not recognized due to syntax error.

msg.jsdoc.name.syntax =\
    name not recognized due to syntax error.

msg.jsdoc.override =\
    extra @override/@inheritDoc tag.

msg.jsdoc.final =\
    extra @final tag.

msg.jsdoc.extra.visibility=\
    extra visibility tag

msg.jsdoc.idgen.duplicate =\
    extra @idGenerator tag

msg.jsdoc.idgen.bad =\
    malformed @idGenerator tag

msg.jsdoc.wizaction =\
    extra @wizaction tag

msg.jsdoc.idgen.unknown =\
    unknown @idGenerator parameter: {0}

msg.jsdoc.hidden =\
    extra @hidden tag

msg.jsdoc.const =\
    conflicting @const tag

msg.jsdoc.desc.extra =\
    extra @desc tag

msg.jsdoc.meaning.extra =\
    extra @meaning tag

msg.jsdoc.alternateMessageId.extra =\
    extra @alternateMessageId tag

msg.jsdoc.fileoverview.extra =\
    extra @fileoverview tag

msg.jsdoc.lends.incompatible =\
    @lends tag incompatible with other annotations.

msg.jsdoc.lends.missing =\
    missing object name in @lends tag.

msg.jsdoc.closurePrimitive.extra =\
    conflicting @closurePrimitive tag

msg.jsdoc.closurePrimitive.invalid =\
    invalid id in @closurePrimitive tag.

msg.jsdoc.closurePrimitive.missing =\
    missing id in @closurePrimitive tag.

msg.jsdoc.missing.lc =\
    missing opening '{'

msg.jsdoc.missing.lp =\
    missing opening (

msg.jsdoc.missing.braces =\
    Type annotations should have curly braces.

msg.jsdoc.unnecessary.braces =\
    braces are not required here

msg.jsdoc.missing.rc =\
    expected closing }

msg.jsdoc.missing.rp =\
    missing closing )

msg.jsdoc.missing.gt =\
    missing closing >

msg.jsdoc.missing.rb =\
    missing closing ]

msg.jsdoc.missing.colon =\
    expecting colon after this

msg.jsdoc.function.newnotobject =\
    constructed type must be an object type

msg.jsdoc.function.varargs =\
    variable length argument must be last.

msg.jsdoc.type.record.duplicate =\
    Duplicate record field {0}.

msg.jsdoc.deprecated =\
    extra @deprecated tag

msg.jsdoc.interface.constructor =\
  cannot be both an interface and a constructor.

msg.jsdoc.record =\
  conflicting @record tag.

msg.jsdoc.implements.duplicate =\
    duplicate @implements tag.

msg.jsdoc.implements.extraqualifier =\
    @implements/@extends requires a bare interface/record name without ! or ?.

msg.jsdoc.nosideeffects =\
    conflicting @nosideeffects tag

msg.jsdoc.implicitcast =\
    extra @implicitCast tag.

msg.jsdoc.type =\
    conflicting @type tag

msg.jsdoc.define =\
    conflicting @define tag

msg.jsdoc.extends.duplicate =\
    duplicate @extends tag

msg.jsdoc.export =\
    extra @export tag

msg.jsdoc.expose =\
    extra @expose tag

msg.jsdoc.externs =\
    extra @externs tag

msg.jsdoc.typesummary =\
    extra @typeSummary tag

msg.jsdoc.nocompile =\
    extra @nocompile tag

msg.jsdoc.nocollapse =\
    extra @nocollapse tag

msg.jsdoc.noinline =\
    extra @noinline tag

msg.jsdoc.pureorbreakmycode =\
    extra @pureOrBreakMyCode tag

msg.jsdoc.collapsibleorbreakmycode =\
    extra @collapsibleOrBreakMyCode tag

msg.jsdoc.seemissing =\
    @see tag missing description

msg.jsdoc.authormissing =\
    @author tag missing author

msg.jsdoc.versionmissing =\
    @version tag missing version information

msg.jsdoc.extraversion =\
    conflicting @version tag

msg.jsdoc.suppress =\
    malformed @suppress tag

msg.jsdoc.suppress.unknown =\
    unknown @suppress parameter: {0}

msg.jsdoc.modifies =\
    malformed @modifies tag

msg.jsdoc.modifies.duplicate =\
    conflicting @modifies tag

msg.jsdoc.modifies.unknown =\
    unknown @modifies parameter: {0}

msg.jsdoc.polymerBehavior.extra =\
    extra @polymerBehavior tag

msg.jsdoc.polymer.extra =\
    extra @polymer tag

msg.jsdoc.customElement.extra =\
    extra @customElement tag

msg.jsdoc.mixinClass.extra =\
    extra @mixinClass tag

msg.jsdoc.mixinFunction.extra =\
    extra @mixinFunction tag

msg.jsdoc.nginject.extra =\
    extra @ngInject tag

msg.no.type.name =\
    expecting a type name.


msg.jsdoc.template.boundedgenerics.used =\
    Bounded generic semantics are currently still in development

msg.jsdoc.template.name.missing =\
    @template tag missing type name.

msg.jsdoc.template.name.redeclaration =\
    Type name(s) for @template annotation declared twice.

msg.jsdoc.template.multipleDeclaration =\
    Multiple template names cannot be declared with bounds or TTL.

msg.jsdoc.template.boundsWithTTL =\
    Template types cannot combine bounds and TTL.

msg.jsdoc.template.typetransformation.missingDelimiter =\
    Expected end delimiter for a type transformation.

msg.jsdoc.template.typetransformation.expressionMissing =\
    Missing type transformation expression.


msg.jsdoc.typetransformation.invalid =\
    Invalid {0}

msg.jsdoc.typetransformation.invalid.expression =\
    Invalid {0} expression

msg.jsdoc.typetransformation.missing.param =\
    Missing parameter in {0}

msg.jsdoc.typetransformation.extra.param =\
    Found extra parameter in {0}

msg.jsdoc.typetransformation.invalid.inside =\
    Invalid expression inside {0}

msg.jsdoc.import =\
    Import in typedef is not supported.