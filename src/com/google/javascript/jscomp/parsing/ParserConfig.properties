/*
 * Copyright 2009 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Configuration options for the Parser.
 *
 * Allows us to update the allowed JSDoc annotations independently of the
 * Compiler binary, so we can add new JSDoc annotations to old binaries.
 *
 * @author nicksantos@google.com (Nick Santos)
 */

// The version of the compiler that we're currently building.
// Should be formatted as:
// Version# (Revision XXX)
compiler.version = ${compiler.version}

// The datestamp of the compiler that we're currently building.
compiler.date = ${compiler.date}

// A comma-delimited list.
// Some of these are not used by JSCompiler, but appear in third-party JS code.
// http://usejsdoc.org/
// It's not strictly necessary for the natively-supported annotations to be
// listed here, but it's nice to have them all in one place.
jsdoc.annotations =\
    addon,\
    augments,\
    author,\
    base,\
    borrows,\
    bug,\
    channel, \
    class,\
    classdesc,\
    config,\
    consistentIdGenerator,\
    constructs,\
    constructor,\
    copyright,\
    default,\
    deprecated,\
    desc,\
    description,\
    dict,\
    enhance,\
    enhanceable,\
    enum,\
    event,\
    example,\
    exception,\
    exec,\
    export,\
    expose,\
    externs,\
    field,\
    file,\
    fires,\
    function,\
    global,\
    hassoydelcall,\
    hassoydeltemplate,\
    id,\
    idGenerator,\
    ignore,\
    inner,\
    instance,\
    kind,\
    lends,\
    link,\
    meaning,\
    member,\
    memberof,\
    memberOf,\
    method,\
    mixes,\
    mixin,\
    model,\
    modifies,\
    modName,\
    mods,\
    module,\
    name,\
    namespace,\
    ngInject,\
    nocompile,\
    package,\
    param,\
    pintomodule,\
    private,\
    property,\
    protected,\
    provideGoog,\
    public,\
    readonly,\
    requirecss,\
    requires,\
    returns,\
    see,\
    since,\
    stableIdGenerator,\
    static,\
    struct,\
    summary,\
    supported,\
    this,\
    throws,\
    todo,\
    tutorial,\
    type,\
    typedef,\
    version,\
    visibility,\
    wizaction,\
    wizmodule,\
    wizSupportsSymbolicLookup

# Comma-delimited list of valid suppressions.
# This should be a subset of the list of DiagnosticGroups.
jsdoc.suppressions =\
    accessControls,\
    ambiguousFunctionDecl,\
    checkDebuggerStatement,\
    checkRegExp,\
    checkTypes,\
    checkVars,\
    closureDepMethodUsageChecks,\
    const,\
    constantProperty,\
    conformanceViolations,\
    deprecated,\
    duplicate,\
    es5Strict,\
    externsValidation,\
    extraProvide,\
    extraRequire,\
    fileoverviewTags,\
    globalThis,\
    invalidCasts,\
    misplacedTypeAnnotation,\
    missingProperties,\
    missingProvide,\
    missingRequire,\
    missingReturn,\
    newCheckTypes,\
    newCheckTypesAllChecks,\
    nonStandardJsDocs,\
    reportUnknownTypes,\
    strictModuleDepCheck,\
    suspiciousCode,\
    transitionalSuspiciousCodeWarnings,\
    undefinedNames,\
    undefinedVars,\
    underscore,\
    unknownDefines,\
    unnecessaryCasts,\
    unusedPrivateMembers,\
    uselessCode,\
    visibility,\
    with

# A comma-delimited list of reserved words that we should not rename variables
# to. Used when an extension is released that steps on globals.
# This prevents the compiler from renaming variables to these names, but not
# from allowing externs for these names.
#
# i,j - common loop variables often overwritten by browser extensions
# s â€“ commonly defined by browser extensions when injecting scripts.
# $j,$ - common jquery aliases often overwritten by browser extensions
# o - overwritten by Norton Identity Protection's Chrome extension.
compiler.reserved.vars = i,j,s,$,$j,o

